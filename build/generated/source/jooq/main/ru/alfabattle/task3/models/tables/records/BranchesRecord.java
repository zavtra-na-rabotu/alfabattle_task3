/*
 * This file is generated by jOOQ.
 */
package ru.alfabattle.task3.models.tables.records;


import java.math.BigDecimal;

import javax.validation.constraints.NotNull;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;

import ru.alfabattle.task3.models.tables.Branches;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BranchesRecord extends UpdatableRecordImpl<BranchesRecord> implements Record5<Integer, String, BigDecimal, BigDecimal, String> {

    private static final long serialVersionUID = -18055047;

    /**
     * Setter for <code>public.branches.id</code>. Номер офиса
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.branches.id</code>. Номер офиса
     */
    @NotNull
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.branches.title</code>. Удобное имя для поиска
     */
    public void setTitle(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.branches.title</code>. Удобное имя для поиска
     */
    public String getTitle() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.branches.lon</code>. Долгота
     */
    public void setLon(BigDecimal value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.branches.lon</code>. Долгота
     */
    public BigDecimal getLon() {
        return (BigDecimal) get(2);
    }

    /**
     * Setter for <code>public.branches.lat</code>. Широта
     */
    public void setLat(BigDecimal value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.branches.lat</code>. Широта
     */
    public BigDecimal getLat() {
        return (BigDecimal) get(3);
    }

    /**
     * Setter for <code>public.branches.address</code>. Адрес
     */
    public void setAddress(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.branches.address</code>. Адрес
     */
    public String getAddress() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, String, BigDecimal, BigDecimal, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, String, BigDecimal, BigDecimal, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Branches.BRANCHES.ID;
    }

    @Override
    public Field<String> field2() {
        return Branches.BRANCHES.TITLE;
    }

    @Override
    public Field<BigDecimal> field3() {
        return Branches.BRANCHES.LON;
    }

    @Override
    public Field<BigDecimal> field4() {
        return Branches.BRANCHES.LAT;
    }

    @Override
    public Field<String> field5() {
        return Branches.BRANCHES.ADDRESS;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getTitle();
    }

    @Override
    public BigDecimal component3() {
        return getLon();
    }

    @Override
    public BigDecimal component4() {
        return getLat();
    }

    @Override
    public String component5() {
        return getAddress();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getTitle();
    }

    @Override
    public BigDecimal value3() {
        return getLon();
    }

    @Override
    public BigDecimal value4() {
        return getLat();
    }

    @Override
    public String value5() {
        return getAddress();
    }

    @Override
    public BranchesRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public BranchesRecord value2(String value) {
        setTitle(value);
        return this;
    }

    @Override
    public BranchesRecord value3(BigDecimal value) {
        setLon(value);
        return this;
    }

    @Override
    public BranchesRecord value4(BigDecimal value) {
        setLat(value);
        return this;
    }

    @Override
    public BranchesRecord value5(String value) {
        setAddress(value);
        return this;
    }

    @Override
    public BranchesRecord values(Integer value1, String value2, BigDecimal value3, BigDecimal value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BranchesRecord
     */
    public BranchesRecord() {
        super(Branches.BRANCHES);
    }

    /**
     * Create a detached, initialised BranchesRecord
     */
    public BranchesRecord(Integer id, String title, BigDecimal lon, BigDecimal lat, String address) {
        super(Branches.BRANCHES);

        set(0, id);
        set(1, title);
        set(2, lon);
        set(3, lat);
        set(4, address);
    }
}
