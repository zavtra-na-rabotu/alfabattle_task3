/*
 * This file is generated by jOOQ.
 */
package ru.alfabattle.task3.models;


import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;

import ru.alfabattle.task3.models.tables.Branches;
import ru.alfabattle.task3.models.tables.QueueLog;
import ru.alfabattle.task3.models.tables.records.BranchesRecord;
import ru.alfabattle.task3.models.tables.records.QueueLogRecord;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>public</code> schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<QueueLogRecord, Integer> IDENTITY_QUEUE_LOG = Identities0.IDENTITY_QUEUE_LOG;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<BranchesRecord> BRANCHES_PK = UniqueKeys0.BRANCHES_PK;
    public static final UniqueKey<QueueLogRecord> QUEUE_LOG_PK = UniqueKeys0.QUEUE_LOG_PK;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<QueueLogRecord, BranchesRecord> QUEUE_LOG__QUEUE_LOG_FK = ForeignKeys0.QUEUE_LOG__QUEUE_LOG_FK;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<QueueLogRecord, Integer> IDENTITY_QUEUE_LOG = Internal.createIdentity(QueueLog.QUEUE_LOG, QueueLog.QUEUE_LOG.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<BranchesRecord> BRANCHES_PK = Internal.createUniqueKey(Branches.BRANCHES, "branches_pk", new TableField[] { Branches.BRANCHES.ID }, true);
        public static final UniqueKey<QueueLogRecord> QUEUE_LOG_PK = Internal.createUniqueKey(QueueLog.QUEUE_LOG, "queue_log_pk", new TableField[] { QueueLog.QUEUE_LOG.ID }, true);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<QueueLogRecord, BranchesRecord> QUEUE_LOG__QUEUE_LOG_FK = Internal.createForeignKey(Keys.BRANCHES_PK, QueueLog.QUEUE_LOG, "queue_log_fk", new TableField[] { QueueLog.QUEUE_LOG.BRANCHES_ID }, true);
    }
}
